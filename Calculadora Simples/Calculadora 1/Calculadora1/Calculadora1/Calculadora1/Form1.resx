<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>